component Phi
	  attributes: u, c, o
	  behaviour:
		let {
		    A := (u,o,c)@(true).(
		      	 (this.u = x and c > this.c)(x,y).[o := y]A
			 +
		      	 (this.u = x and c = this.c)(x,y).[o := 1, c:= 0]A
			 +
 		      	 (this.u = x and c < this.c)(x,y).A
                         )
			 +
	                 (this.u /= x and y = this.o)(x,y,z).(x = w and t /= y)(w,t).A
			 +
			 (this.u /= x and y /= this.o)(x,y,z).(
			     <z > c>(x,o)@(true).[o := y]A
			     +
     			     <z = c>(x,o)@(true).[o := 1, c := 0]A
			     +
			     <z < c>(x,o)@(true).A
			     +
			     (x = w and t /= y)(w,t).A
			 )
		}
		init A
end

A1 : Phi (u -> 1, c -> 1, o -> 1)
A2 : Phi (u -> 2, c -> 1, o -> 1)
A3 : Phi (u -> 3, c -> 1, o -> 0)
A4 : Phi (u -> 4, c -> 1, o -> 0)
%%A5 : Phi (u -> 5, c -> 1, o -> 0)
%%A6 : Phi (u -> 6, c -> 1, o -> 0)
